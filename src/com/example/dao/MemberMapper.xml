<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.MemberDao">

	<select id="selectAll" resultType="com.example.domain.Member">
		SELECT
		members.id,
		members.name,members.age,
		members.address, members.created,
		member_types.name AS typeName
		FROM members
		JOIN member_types
		ON
		members.type_id = member_types.id
	</select>
	<select id="selectById" parameterType="int"
		resultType="com.example.domain.Member">
		SELECT
		members.id, members.name,members.age,
		members.address, members.created,
		members.type_id AS typeId
		FROM members
		WHERE members.id = #{id}
	</select>
	<insert id="insert" parameterType="com.example.domain.Member"
		useGeneratedKeys="true">
		INSERT INTO members (name, age, address, type_id,
		created)
		VALUES (#{name}, #{age}, #{address}, #{typeId}, NOW())
	</insert>
	<update id="update" parameterType="com.example.domain.Member">
		UPDATE members
		SET name =
		#{name}, age = #{age},
		address = #{address}, type_id = #{typeId}
		WHERE
		id = #{id}
	</update>
	<delete id="delete" parameterType="int">
		DELETE FROM members WHERE id =
		#{id}
	</delete>
	<select id="count" resultType="long">
		select count(*) from members
	</select>

	<select id="selectLimited"
		resultType="com.example.domain.Member">
		SELECT
		members.id, members.name,members.age,
		members.address, members.created,
		member_types.name AS typeName
		from members
		join member_types
		on members.type_id = member_types.id
		limit #{offset}, #{num}
	</select>
</mapper>